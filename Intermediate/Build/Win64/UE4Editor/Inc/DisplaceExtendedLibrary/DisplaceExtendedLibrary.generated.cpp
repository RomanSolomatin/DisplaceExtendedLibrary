// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/DisplaceExtendedLibraryPrivatePCH.h"
#include "GeneratedCppIncludes.h"
#include "DisplaceExtendedLibrary.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1DisplaceExtendedLibrary() {}
class UScriptStruct* FDisplaceInputAxis::StaticStruct()
{
	extern DISPLACEEXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_DisplaceExtendedLibrary();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern DISPLACEEXTENDEDLIBRARY_API class UScriptStruct* Z_Construct_UScriptStruct_FDisplaceInputAxis();
		extern DISPLACEEXTENDEDLIBRARY_API uint32 Get_Z_Construct_UScriptStruct_FDisplaceInputAxis_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDisplaceInputAxis, Z_Construct_UPackage__Script_DisplaceExtendedLibrary(), TEXT("DisplaceInputAxis"), sizeof(FDisplaceInputAxis), Get_Z_Construct_UScriptStruct_FDisplaceInputAxis_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDisplaceInputAxis(FDisplaceInputAxis::StaticStruct, TEXT("/Script/DisplaceExtendedLibrary"), TEXT("DisplaceInputAxis"), false, nullptr, nullptr);
static struct FScriptStruct_DisplaceExtendedLibrary_StaticRegisterNativesFDisplaceInputAxis
{
	FScriptStruct_DisplaceExtendedLibrary_StaticRegisterNativesFDisplaceInputAxis()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DisplaceInputAxis")),new UScriptStruct::TCppStructOps<FDisplaceInputAxis>);
	}
} ScriptStruct_DisplaceExtendedLibrary_StaticRegisterNativesFDisplaceInputAxis;
class UScriptStruct* FDisplaceInput::StaticStruct()
{
	extern DISPLACEEXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_DisplaceExtendedLibrary();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern DISPLACEEXTENDEDLIBRARY_API class UScriptStruct* Z_Construct_UScriptStruct_FDisplaceInput();
		extern DISPLACEEXTENDEDLIBRARY_API uint32 Get_Z_Construct_UScriptStruct_FDisplaceInput_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDisplaceInput, Z_Construct_UPackage__Script_DisplaceExtendedLibrary(), TEXT("DisplaceInput"), sizeof(FDisplaceInput), Get_Z_Construct_UScriptStruct_FDisplaceInput_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDisplaceInput(FDisplaceInput::StaticStruct, TEXT("/Script/DisplaceExtendedLibrary"), TEXT("DisplaceInput"), false, nullptr, nullptr);
static struct FScriptStruct_DisplaceExtendedLibrary_StaticRegisterNativesFDisplaceInput
{
	FScriptStruct_DisplaceExtendedLibrary_StaticRegisterNativesFDisplaceInput()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DisplaceInput")),new UScriptStruct::TCppStructOps<FDisplaceInput>);
	}
} ScriptStruct_DisplaceExtendedLibrary_StaticRegisterNativesFDisplaceInput;
	void UDisplaceExtendedLibraryBPLibrary::StaticRegisterNativesUDisplaceExtendedLibraryBPLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UDisplaceExtendedLibraryBPLibrary::StaticClass(), "ChangePerceptionSightRadius",(Native)&UDisplaceExtendedLibraryBPLibrary::execChangePerceptionSightRadius);
		FNativeFunctionRegistrar::RegisterFunction(UDisplaceExtendedLibraryBPLibrary::StaticClass(), "GetPerceptionSightRadius",(Native)&UDisplaceExtendedLibraryBPLibrary::execGetPerceptionSightRadius);
		FNativeFunctionRegistrar::RegisterFunction(UDisplaceExtendedLibraryBPLibrary::StaticClass(), "VictoryGetAllActionKeyBindings",(Native)&UDisplaceExtendedLibraryBPLibrary::execVictoryGetAllActionKeyBindings);
		FNativeFunctionRegistrar::RegisterFunction(UDisplaceExtendedLibraryBPLibrary::StaticClass(), "VictoryGetAllAxisAndActionMappingsForKey",(Native)&UDisplaceExtendedLibraryBPLibrary::execVictoryGetAllAxisAndActionMappingsForKey);
		FNativeFunctionRegistrar::RegisterFunction(UDisplaceExtendedLibraryBPLibrary::StaticClass(), "VictoryGetAllAxisKeyBindings",(Native)&UDisplaceExtendedLibraryBPLibrary::execVictoryGetAllAxisKeyBindings);
		FNativeFunctionRegistrar::RegisterFunction(UDisplaceExtendedLibraryBPLibrary::StaticClass(), "VictoryGetVictoryInput",(Native)&UDisplaceExtendedLibraryBPLibrary::execVictoryGetVictoryInput);
		FNativeFunctionRegistrar::RegisterFunction(UDisplaceExtendedLibraryBPLibrary::StaticClass(), "VictoryGetVictoryInputAxis",(Native)&UDisplaceExtendedLibraryBPLibrary::execVictoryGetVictoryInputAxis);
		FNativeFunctionRegistrar::RegisterFunction(UDisplaceExtendedLibraryBPLibrary::StaticClass(), "VictoryReBindActionKey",(Native)&UDisplaceExtendedLibraryBPLibrary::execVictoryReBindActionKey);
		FNativeFunctionRegistrar::RegisterFunction(UDisplaceExtendedLibraryBPLibrary::StaticClass(), "VictoryReBindAxisKey",(Native)&UDisplaceExtendedLibraryBPLibrary::execVictoryReBindAxisKey);
		FNativeFunctionRegistrar::RegisterFunction(UDisplaceExtendedLibraryBPLibrary::StaticClass(), "VictoryRemoveActionKeyBind",(Native)&UDisplaceExtendedLibraryBPLibrary::execVictoryRemoveActionKeyBind);
		FNativeFunctionRegistrar::RegisterFunction(UDisplaceExtendedLibraryBPLibrary::StaticClass(), "VictoryRemoveAxisKeyBind",(Native)&UDisplaceExtendedLibraryBPLibrary::execVictoryRemoveAxisKeyBind);
		FNativeFunctionRegistrar::RegisterFunction(UDisplaceExtendedLibraryBPLibrary::StaticClass(), "ZeroRot",(Native)&UDisplaceExtendedLibraryBPLibrary::execZeroRot);
		FNativeFunctionRegistrar::RegisterFunction(UDisplaceExtendedLibraryBPLibrary::StaticClass(), "ZeroVector",(Native)&UDisplaceExtendedLibraryBPLibrary::execZeroVector);
	}
	IMPLEMENT_CLASS(UDisplaceExtendedLibraryBPLibrary, 2540633167);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	INPUTCORE_API class UScriptStruct* Z_Construct_UScriptStruct_FKey();
	AIMODULE_API class UClass* Z_Construct_UClass_UAIPerceptionComponent_NoRegister();
	SLATECORE_API class UScriptStruct* Z_Construct_UScriptStruct_FKeyEvent();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FRotator();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();

	DISPLACEEXTENDEDLIBRARY_API class UScriptStruct* Z_Construct_UScriptStruct_FDisplaceInputAxis();
	DISPLACEEXTENDEDLIBRARY_API class UScriptStruct* Z_Construct_UScriptStruct_FDisplaceInput();
	DISPLACEEXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_ChangePerceptionSightRadius();
	DISPLACEEXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_GetPerceptionSightRadius();
	DISPLACEEXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryGetAllActionKeyBindings();
	DISPLACEEXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryGetAllAxisAndActionMappingsForKey();
	DISPLACEEXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryGetAllAxisKeyBindings();
	DISPLACEEXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryGetVictoryInput();
	DISPLACEEXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryGetVictoryInputAxis();
	DISPLACEEXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryReBindActionKey();
	DISPLACEEXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryReBindAxisKey();
	DISPLACEEXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryRemoveActionKeyBind();
	DISPLACEEXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryRemoveAxisKeyBind();
	DISPLACEEXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_ZeroRot();
	DISPLACEEXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_ZeroVector();
	DISPLACEEXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UDisplaceExtendedLibraryBPLibrary_NoRegister();
	DISPLACEEXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UDisplaceExtendedLibraryBPLibrary();
	DISPLACEEXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_DisplaceExtendedLibrary();
	UScriptStruct* Z_Construct_UScriptStruct_FDisplaceInputAxis()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_DisplaceExtendedLibrary();
		extern uint32 Get_Z_Construct_UScriptStruct_FDisplaceInputAxis_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("DisplaceInputAxis"), sizeof(FDisplaceInputAxis), Get_Z_Construct_UScriptStruct_FDisplaceInputAxis_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("DisplaceInputAxis"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FDisplaceInputAxis>, EStructFlags(0x00000001));
			UProperty* NewProp_Scale = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Scale"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Scale, FDisplaceInputAxis), 0x0010000000000005);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Key, FDisplaceInputAxis), 0x0010000000000005, Z_Construct_UScriptStruct_FKey());
			UProperty* NewProp_KeyAsString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("KeyAsString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(KeyAsString, FDisplaceInputAxis), 0x0010000000000005);
			UProperty* NewProp_AxisName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AxisName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AxisName, FDisplaceInputAxis), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
			MetaData->SetValue(NewProp_Scale, TEXT("Category"), TEXT("Input Song"));
			MetaData->SetValue(NewProp_Scale, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
			MetaData->SetValue(NewProp_Key, TEXT("Category"), TEXT("Input Song"));
			MetaData->SetValue(NewProp_Key, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
			MetaData->SetValue(NewProp_KeyAsString, TEXT("Category"), TEXT("Input Song"));
			MetaData->SetValue(NewProp_KeyAsString, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
			MetaData->SetValue(NewProp_AxisName, TEXT("Category"), TEXT("Input Song"));
			MetaData->SetValue(NewProp_AxisName, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FDisplaceInputAxis_CRC() { return 3190883912U; }
	UScriptStruct* Z_Construct_UScriptStruct_FDisplaceInput()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_DisplaceExtendedLibrary();
		extern uint32 Get_Z_Construct_UScriptStruct_FDisplaceInput_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("DisplaceInput"), sizeof(FDisplaceInput), Get_Z_Construct_UScriptStruct_FDisplaceInput_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("DisplaceInput"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FDisplaceInput>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCmd, FDisplaceInput, uint8);
			UProperty* NewProp_bCmd = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bCmd"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCmd, FDisplaceInput), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bCmd, FDisplaceInput), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAlt, FDisplaceInput, uint8);
			UProperty* NewProp_bAlt = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bAlt"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAlt, FDisplaceInput), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bAlt, FDisplaceInput), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCtrl, FDisplaceInput, uint8);
			UProperty* NewProp_bCtrl = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bCtrl"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCtrl, FDisplaceInput), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bCtrl, FDisplaceInput), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShift, FDisplaceInput, uint8);
			UProperty* NewProp_bShift = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bShift"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShift, FDisplaceInput), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bShift, FDisplaceInput), sizeof(uint8), false);
			UProperty* NewProp_KeyAsString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("KeyAsString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(KeyAsString, FDisplaceInput), 0x0010000000000005);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Key, FDisplaceInput), 0x0010000000000005, Z_Construct_UScriptStruct_FKey());
			UProperty* NewProp_ActionName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ActionName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ActionName, FDisplaceInput), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("*      Function library class.\n*      Each function in it is expected to be static and represents blueprint node that can be called in any blueprint.\n*\n*      When declaring function you can define metadata for the node. Key function specifiers will be BlueprintPure and BlueprintCallable.\n*      BlueprintPure - means the function does not affect the owning object in any way and thus creates a node without Exec pins.\n*      BlueprintCallable - makes a function which can be executed in Blueprints - Thus it has Exec pins.\n*      DisplayName - full name of the node, shown when you mouse over the node and in the blueprint drop down menu.\n*                              Its lets you name the node using characters not allowed in C++ function names.\n*      CompactNodeTitle - the word(s) that appear on the node.\n*      Keywords -      the list of keywords that helps you to find node when you search for it using Blueprint drop-down menu.\n*                              Good example is \"Print String\" node which you can find also by using keyword \"log\".\n*      Category -      the category your node will be under in the Blueprint drop-down menu.\n*\n*      For more info on custom blueprint nodes visit documentation:\n*      https://wiki.unrealengine.com/Custom_Blueprint_Node_Creation"));
			MetaData->SetValue(NewProp_bCmd, TEXT("Category"), TEXT("Input Song"));
			MetaData->SetValue(NewProp_bCmd, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
			MetaData->SetValue(NewProp_bAlt, TEXT("Category"), TEXT("Input Song"));
			MetaData->SetValue(NewProp_bAlt, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
			MetaData->SetValue(NewProp_bCtrl, TEXT("Category"), TEXT("Input Song"));
			MetaData->SetValue(NewProp_bCtrl, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
			MetaData->SetValue(NewProp_bShift, TEXT("Category"), TEXT("Input Song"));
			MetaData->SetValue(NewProp_bShift, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
			MetaData->SetValue(NewProp_KeyAsString, TEXT("Category"), TEXT("Input Song"));
			MetaData->SetValue(NewProp_KeyAsString, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
			MetaData->SetValue(NewProp_Key, TEXT("Category"), TEXT("Input Song"));
			MetaData->SetValue(NewProp_Key, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
			MetaData->SetValue(NewProp_ActionName, TEXT("Category"), TEXT("Input Song"));
			MetaData->SetValue(NewProp_ActionName, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FDisplaceInput_CRC() { return 2991894252U; }
	UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_ChangePerceptionSightRadius()
	{
		struct DisplaceExtendedLibraryBPLibrary_eventChangePerceptionSightRadius_Parms
		{
			UAIPerceptionComponent* PerceptionComponent;
			float NewRange;
		};
		UObject* Outer=Z_Construct_UClass_UDisplaceExtendedLibraryBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ChangePerceptionSightRadius"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(DisplaceExtendedLibraryBPLibrary_eventChangePerceptionSightRadius_Parms));
			UProperty* NewProp_NewRange = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewRange"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(NewRange, DisplaceExtendedLibraryBPLibrary_eventChangePerceptionSightRadius_Parms), 0x0010000000000080);
			UProperty* NewProp_PerceptionComponent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PerceptionComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PerceptionComponent, DisplaceExtendedLibraryBPLibrary_eventChangePerceptionSightRadius_Parms), 0x0010000000080080, Z_Construct_UClass_UAIPerceptionComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Displace Media|AI|Perception"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("UFUNCTION(BlueprintCallable, Category = \"Displace Media|AI\")\nvoid GetSensesConfig(UAIPerceptionComponent* AIPerceptionComponent, TArray<UAISenseConfig*>& SensesConfig);"));
			MetaData->SetValue(NewProp_PerceptionComponent, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_GetPerceptionSightRadius()
	{
		struct DisplaceExtendedLibraryBPLibrary_eventGetPerceptionSightRadius_Parms
		{
			UAIPerceptionComponent* PerceptionComponent;
			bool Successful;
			float SightRadius;
			float LoseSightRadius;
		};
		UObject* Outer=Z_Construct_UClass_UDisplaceExtendedLibraryBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPerceptionSightRadius"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(DisplaceExtendedLibraryBPLibrary_eventGetPerceptionSightRadius_Parms));
			UProperty* NewProp_LoseSightRadius = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LoseSightRadius"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(LoseSightRadius, DisplaceExtendedLibraryBPLibrary_eventGetPerceptionSightRadius_Parms), 0x0010000000000180);
			UProperty* NewProp_SightRadius = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SightRadius"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SightRadius, DisplaceExtendedLibraryBPLibrary_eventGetPerceptionSightRadius_Parms), 0x0010000000000180);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Successful, DisplaceExtendedLibraryBPLibrary_eventGetPerceptionSightRadius_Parms, bool);
			UProperty* NewProp_Successful = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Successful"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Successful, DisplaceExtendedLibraryBPLibrary_eventGetPerceptionSightRadius_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(Successful, DisplaceExtendedLibraryBPLibrary_eventGetPerceptionSightRadius_Parms), sizeof(bool), true);
			UProperty* NewProp_PerceptionComponent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PerceptionComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PerceptionComponent, DisplaceExtendedLibraryBPLibrary_eventGetPerceptionSightRadius_Parms), 0x0010000000080080, Z_Construct_UClass_UAIPerceptionComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Displace Media|AI|Perception"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("static void ChangePerceptionSightRadius(AAIController* AIController, float NewRange);"));
			MetaData->SetValue(NewProp_PerceptionComponent, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryGetAllActionKeyBindings()
	{
		struct DisplaceExtendedLibraryBPLibrary_eventVictoryGetAllActionKeyBindings_Parms
		{
			TArray<FDisplaceInput> Bindings;
		};
		UObject* Outer=Z_Construct_UClass_UDisplaceExtendedLibraryBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryGetAllActionKeyBindings"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(DisplaceExtendedLibraryBPLibrary_eventVictoryGetAllActionKeyBindings_Parms));
			UProperty* NewProp_Bindings = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Bindings"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Bindings, DisplaceExtendedLibraryBPLibrary_eventVictoryGetAllActionKeyBindings_Parms), 0x0010000000000180);
			UProperty* NewProp_Bindings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Bindings, TEXT("Bindings"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FDisplaceInput());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Displace Media|Key Rebinding"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryGetAllAxisAndActionMappingsForKey()
	{
		struct DisplaceExtendedLibraryBPLibrary_eventVictoryGetAllAxisAndActionMappingsForKey_Parms
		{
			FKey Key;
			TArray<FDisplaceInput> ActionBindings;
			TArray<FDisplaceInputAxis> AxisBindings;
		};
		UObject* Outer=Z_Construct_UClass_UDisplaceExtendedLibraryBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryGetAllAxisAndActionMappingsForKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(DisplaceExtendedLibraryBPLibrary_eventVictoryGetAllAxisAndActionMappingsForKey_Parms));
			UProperty* NewProp_AxisBindings = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AxisBindings"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(AxisBindings, DisplaceExtendedLibraryBPLibrary_eventVictoryGetAllAxisAndActionMappingsForKey_Parms), 0x0010000000000180);
			UProperty* NewProp_AxisBindings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AxisBindings, TEXT("AxisBindings"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FDisplaceInputAxis());
			UProperty* NewProp_ActionBindings = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ActionBindings"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ActionBindings, DisplaceExtendedLibraryBPLibrary_eventVictoryGetAllAxisAndActionMappingsForKey_Parms), 0x0010000000000180);
			UProperty* NewProp_ActionBindings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ActionBindings, TEXT("ActionBindings"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FDisplaceInput());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Key, DisplaceExtendedLibraryBPLibrary_eventVictoryGetAllAxisAndActionMappingsForKey_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FKey());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Displace Media|Key Rebinding"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryGetAllAxisKeyBindings()
	{
		struct DisplaceExtendedLibraryBPLibrary_eventVictoryGetAllAxisKeyBindings_Parms
		{
			TArray<FDisplaceInputAxis> Bindings;
		};
		UObject* Outer=Z_Construct_UClass_UDisplaceExtendedLibraryBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryGetAllAxisKeyBindings"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(DisplaceExtendedLibraryBPLibrary_eventVictoryGetAllAxisKeyBindings_Parms));
			UProperty* NewProp_Bindings = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Bindings"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Bindings, DisplaceExtendedLibraryBPLibrary_eventVictoryGetAllAxisKeyBindings_Parms), 0x0010000000000180);
			UProperty* NewProp_Bindings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Bindings, TEXT("Bindings"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FDisplaceInputAxis());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Displace Media|Key Rebinding"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryGetVictoryInput()
	{
		struct DisplaceExtendedLibraryBPLibrary_eventVictoryGetVictoryInput_Parms
		{
			FKeyEvent KeyEvent;
			FDisplaceInput ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UDisplaceExtendedLibraryBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryGetVictoryInput"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(DisplaceExtendedLibraryBPLibrary_eventVictoryGetVictoryInput_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, DisplaceExtendedLibraryBPLibrary_eventVictoryGetVictoryInput_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FDisplaceInput());
			UProperty* NewProp_KeyEvent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(KeyEvent, DisplaceExtendedLibraryBPLibrary_eventVictoryGetVictoryInput_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FKeyEvent());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Displace Media|Key Rebinding"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Action Mapping"));
			MetaData->SetValue(NewProp_KeyEvent, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryGetVictoryInputAxis()
	{
		struct DisplaceExtendedLibraryBPLibrary_eventVictoryGetVictoryInputAxis_Parms
		{
			FKeyEvent KeyEvent;
			FDisplaceInputAxis ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UDisplaceExtendedLibraryBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryGetVictoryInputAxis"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(DisplaceExtendedLibraryBPLibrary_eventVictoryGetVictoryInputAxis_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, DisplaceExtendedLibraryBPLibrary_eventVictoryGetVictoryInputAxis_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FDisplaceInputAxis());
			UProperty* NewProp_KeyEvent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(KeyEvent, DisplaceExtendedLibraryBPLibrary_eventVictoryGetVictoryInputAxis_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FKeyEvent());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Displace Media|Key Rebinding"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Axis Mapping"));
			MetaData->SetValue(NewProp_KeyEvent, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryReBindActionKey()
	{
		struct DisplaceExtendedLibraryBPLibrary_eventVictoryReBindActionKey_Parms
		{
			FDisplaceInput Original;
			FDisplaceInput NewBinding;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UDisplaceExtendedLibraryBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryReBindActionKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(DisplaceExtendedLibraryBPLibrary_eventVictoryReBindActionKey_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, DisplaceExtendedLibraryBPLibrary_eventVictoryReBindActionKey_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, DisplaceExtendedLibraryBPLibrary_eventVictoryReBindActionKey_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, DisplaceExtendedLibraryBPLibrary_eventVictoryReBindActionKey_Parms), sizeof(bool), true);
			UProperty* NewProp_NewBinding = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewBinding"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(NewBinding, DisplaceExtendedLibraryBPLibrary_eventVictoryReBindActionKey_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FDisplaceInput());
			UProperty* NewProp_Original = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Original"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Original, DisplaceExtendedLibraryBPLibrary_eventVictoryReBindActionKey_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FDisplaceInput());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Displace Media|Key Rebinding"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("You can leave the AsString field blank :) Returns false if the key could not be found as an existing mapping!  Enjoy! <3  Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryReBindAxisKey()
	{
		struct DisplaceExtendedLibraryBPLibrary_eventVictoryReBindAxisKey_Parms
		{
			FDisplaceInputAxis Original;
			FDisplaceInputAxis NewBinding;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UDisplaceExtendedLibraryBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryReBindAxisKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(DisplaceExtendedLibraryBPLibrary_eventVictoryReBindAxisKey_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, DisplaceExtendedLibraryBPLibrary_eventVictoryReBindAxisKey_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, DisplaceExtendedLibraryBPLibrary_eventVictoryReBindAxisKey_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, DisplaceExtendedLibraryBPLibrary_eventVictoryReBindAxisKey_Parms), sizeof(bool), true);
			UProperty* NewProp_NewBinding = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewBinding"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(NewBinding, DisplaceExtendedLibraryBPLibrary_eventVictoryReBindAxisKey_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FDisplaceInputAxis());
			UProperty* NewProp_Original = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Original"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Original, DisplaceExtendedLibraryBPLibrary_eventVictoryReBindAxisKey_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FDisplaceInputAxis());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Displace Media|Key Rebinding"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("You can leave the AsString field blank :) Returns false if the key could not be found as an existing mapping!  Enjoy! <3  Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryRemoveActionKeyBind()
	{
		struct DisplaceExtendedLibraryBPLibrary_eventVictoryRemoveActionKeyBind_Parms
		{
			FDisplaceInput ToRemove;
		};
		UObject* Outer=Z_Construct_UClass_UDisplaceExtendedLibraryBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryRemoveActionKeyBind"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(DisplaceExtendedLibraryBPLibrary_eventVictoryRemoveActionKeyBind_Parms));
			UProperty* NewProp_ToRemove = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ToRemove"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ToRemove, DisplaceExtendedLibraryBPLibrary_eventVictoryRemoveActionKeyBind_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FDisplaceInput());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Displace Media|Key Rebinding"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryRemoveAxisKeyBind()
	{
		struct DisplaceExtendedLibraryBPLibrary_eventVictoryRemoveAxisKeyBind_Parms
		{
			FDisplaceInputAxis ToRemove;
		};
		UObject* Outer=Z_Construct_UClass_UDisplaceExtendedLibraryBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryRemoveAxisKeyBind"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(DisplaceExtendedLibraryBPLibrary_eventVictoryRemoveAxisKeyBind_Parms));
			UProperty* NewProp_ToRemove = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ToRemove"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ToRemove, DisplaceExtendedLibraryBPLibrary_eventVictoryRemoveAxisKeyBind_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FDisplaceInputAxis());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Displace Media|Key Rebinding"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_ZeroRot()
	{
		struct DisplaceExtendedLibraryBPLibrary_eventZeroRot_Parms
		{
			FRotator StartingRotation;
			bool X;
			bool Y;
			bool Z;
			FRotator ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UDisplaceExtendedLibraryBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ZeroRot"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04822401, 65535, sizeof(DisplaceExtendedLibraryBPLibrary_eventZeroRot_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, DisplaceExtendedLibraryBPLibrary_eventZeroRot_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FRotator());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Z, DisplaceExtendedLibraryBPLibrary_eventZeroRot_Parms, bool);
			UProperty* NewProp_Z = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Z"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Z, DisplaceExtendedLibraryBPLibrary_eventZeroRot_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Z, DisplaceExtendedLibraryBPLibrary_eventZeroRot_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Y, DisplaceExtendedLibraryBPLibrary_eventZeroRot_Parms, bool);
			UProperty* NewProp_Y = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Y"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Y, DisplaceExtendedLibraryBPLibrary_eventZeroRot_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Y, DisplaceExtendedLibraryBPLibrary_eventZeroRot_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(X, DisplaceExtendedLibraryBPLibrary_eventZeroRot_Parms, bool);
			UProperty* NewProp_X = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("X"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(X, DisplaceExtendedLibraryBPLibrary_eventZeroRot_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(X, DisplaceExtendedLibraryBPLibrary_eventZeroRot_Parms), sizeof(bool), true);
			UProperty* NewProp_StartingRotation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("StartingRotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(StartingRotation, DisplaceExtendedLibraryBPLibrary_eventZeroRot_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FRotator());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Displace Media|Math"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_ZeroVector()
	{
		struct DisplaceExtendedLibraryBPLibrary_eventZeroVector_Parms
		{
			FVector Vector;
			bool X;
			bool Y;
			bool Z;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UDisplaceExtendedLibraryBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ZeroVector"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04822401, 65535, sizeof(DisplaceExtendedLibraryBPLibrary_eventZeroVector_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, DisplaceExtendedLibraryBPLibrary_eventZeroVector_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Z, DisplaceExtendedLibraryBPLibrary_eventZeroVector_Parms, bool);
			UProperty* NewProp_Z = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Z"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Z, DisplaceExtendedLibraryBPLibrary_eventZeroVector_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Z, DisplaceExtendedLibraryBPLibrary_eventZeroVector_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Y, DisplaceExtendedLibraryBPLibrary_eventZeroVector_Parms, bool);
			UProperty* NewProp_Y = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Y"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Y, DisplaceExtendedLibraryBPLibrary_eventZeroVector_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Y, DisplaceExtendedLibraryBPLibrary_eventZeroVector_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(X, DisplaceExtendedLibraryBPLibrary_eventZeroVector_Parms, bool);
			UProperty* NewProp_X = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("X"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(X, DisplaceExtendedLibraryBPLibrary_eventZeroVector_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(X, DisplaceExtendedLibraryBPLibrary_eventZeroVector_Parms), sizeof(bool), true);
			UProperty* NewProp_Vector = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Vector"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Vector, DisplaceExtendedLibraryBPLibrary_eventZeroVector_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Displace Media|Math"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UDisplaceExtendedLibraryBPLibrary_NoRegister()
	{
		return UDisplaceExtendedLibraryBPLibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_UDisplaceExtendedLibraryBPLibrary()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage__Script_DisplaceExtendedLibrary();
			OuterClass = UDisplaceExtendedLibraryBPLibrary::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;

				OuterClass->LinkChild(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_ChangePerceptionSightRadius());
				OuterClass->LinkChild(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_GetPerceptionSightRadius());
				OuterClass->LinkChild(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryGetAllActionKeyBindings());
				OuterClass->LinkChild(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryGetAllAxisAndActionMappingsForKey());
				OuterClass->LinkChild(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryGetAllAxisKeyBindings());
				OuterClass->LinkChild(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryGetVictoryInput());
				OuterClass->LinkChild(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryGetVictoryInputAxis());
				OuterClass->LinkChild(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryReBindActionKey());
				OuterClass->LinkChild(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryReBindAxisKey());
				OuterClass->LinkChild(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryRemoveActionKeyBind());
				OuterClass->LinkChild(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryRemoveAxisKeyBind());
				OuterClass->LinkChild(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_ZeroRot());
				OuterClass->LinkChild(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_ZeroVector());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_ChangePerceptionSightRadius(), "ChangePerceptionSightRadius"); // 1331863854
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_GetPerceptionSightRadius(), "GetPerceptionSightRadius"); // 1223002451
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryGetAllActionKeyBindings(), "VictoryGetAllActionKeyBindings"); // 1888834684
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryGetAllAxisAndActionMappingsForKey(), "VictoryGetAllAxisAndActionMappingsForKey"); // 920031833
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryGetAllAxisKeyBindings(), "VictoryGetAllAxisKeyBindings"); // 3227109862
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryGetVictoryInput(), "VictoryGetVictoryInput"); // 4127714615
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryGetVictoryInputAxis(), "VictoryGetVictoryInputAxis"); // 2699410812
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryReBindActionKey(), "VictoryReBindActionKey"); // 411063411
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryReBindAxisKey(), "VictoryReBindAxisKey"); // 1834755330
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryRemoveActionKeyBind(), "VictoryRemoveActionKeyBind"); // 190852649
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_VictoryRemoveAxisKeyBind(), "VictoryRemoveAxisKeyBind"); // 2025079157
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_ZeroRot(), "ZeroRot"); // 2633594314
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDisplaceExtendedLibraryBPLibrary_ZeroVector(), "ZeroVector"); // 3958483597
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("DisplaceExtendedLibraryBPLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/DisplaceExtendedLibraryBPLibrary.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDisplaceExtendedLibraryBPLibrary(Z_Construct_UClass_UDisplaceExtendedLibraryBPLibrary, &UDisplaceExtendedLibraryBPLibrary::StaticClass, TEXT("UDisplaceExtendedLibraryBPLibrary"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDisplaceExtendedLibraryBPLibrary);
	UPackage* Z_Construct_UPackage__Script_DisplaceExtendedLibrary()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/DisplaceExtendedLibrary")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000080);
			FGuid Guid;
			Guid.A = 0x8857D53B;
			Guid.B = 0x0BA87F8B;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
